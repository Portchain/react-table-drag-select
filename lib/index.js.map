{"version":3,"sources":["../index.js"],"names":["TableDragSelect","state","selectionStarted","hoverStarted","targetRow","targetColumn","startRow","startColumn","endRow","endColumn","addMode","hoverStartRow","hoverStartColumn","hoverEndRow","hoverEndColumn","componentDidMount","window","addEventListener","handleTouchEndWindow","componentWillUnmount","removeEventListener","render","renderRows","Children","map","props","children","tr","i","cell","j","handleTouchStartCell","handleTouchMoveCell","onMouseEnter","onMouseLeave","value","isCellBeingHovered","isCellBeingSelected","isLeftClick","e","button","isTouch","type","preventDefault","eventToCellLocation","row","column","cellLocationByGranularity","onSelectionStart","setState","granularityFollowsTarget","stateStartRow","stateStartColumn","stateEndRow","stateEndColumn","nextRowCount","Math","abs","nextColumnCount","maxRows","maxColumns","minRow","min","maxRow","max","minColumn","maxColumn","onChange","Component","propTypes","error","Error","Array","isArray","length","columnCount","number","granularityRows","granularityColumns","granularityRowsOffset","granularityColumnsOffset","bool","func","onInput","trs","toArray","rowCount","tds","td","defaultProps","Infinity","Cell","shouldComponentUpdate","beingSelected","nextProps","selected","hovered","handleTouchStart","passive","handleTouchMove","className","disabled","onTouchStart","onTouchMove","handleMouseEnter","handleMouseLeave","target","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","rowIndex","cellIndex","numberByGranularity","granularity","offset","start","Number","end","floor"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport clone from \"clone\";\nimport PropTypes from \"prop-types\";\n\nexport default class TableDragSelect extends React.Component {\n  static propTypes = {\n    value: props => {\n      const error = new Error(\n        \"Invalid prop `value` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      if (!Array.isArray(props.value)) {\n        return error;\n      }\n      if (props.value.length === 0) {\n        return;\n      }\n      const columnCount = props.value[0].length;\n      for (const row of props.value) {\n        if (!Array.isArray(row) || row.length !== columnCount) {\n          return error;\n        }\n        for (const cell of row) {\n          if (typeof cell !== \"boolean\") {\n            return error;\n          }\n        }\n      }\n    },\n    maxRows: PropTypes.number,\n    maxColumns: PropTypes.number,\n    granularityRows: PropTypes.number,\n    granularityColumns: PropTypes.number,\n    granularityRowsOffset: PropTypes.number,\n    granularityColumnsOffset: PropTypes.number,\n    granularityFollowsTarget: PropTypes.bool,\n    onSelectionStart: PropTypes.func,\n    onInput: PropTypes.func,\n    onChange: PropTypes.func,\n    children: props => {\n      if (TableDragSelect.propTypes.value(props)) {\n        return; // Let error be handled elsewhere\n      }\n      const error = new Error(\n        \"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      const trs = React.Children.toArray(props.children);\n      const rowCount = props.value.length;\n      const columnCount = props.value.length === 0 ? 0 : props.value[0].length;\n      if (trs.length !== rowCount) {\n        return error;\n      }\n      for (const tr of trs) {\n        const tds = React.Children.toArray(tr.props.children);\n        if (tr.type !== \"tr\" || tds.length !== columnCount) {\n          return error;\n        }\n        for (const td of tds) {\n          if (td.type !== \"td\") {\n            return error;\n          }\n        }\n      }\n    }\n  };\n\n  static defaultProps = {\n    value: [],\n    // maximum number of rows to select at once\n    maxRows: Infinity,\n    // maximum number of columns to select at once\n    maxColumns: Infinity,\n    // how many rows to select at once\n    granularityRows: 1,\n    // how many columns to select at once\n    granularityColumns: 1,\n    // offset the row selection by N rows\n    granularityRowsOffset: 0,\n    // offset the column selection by N rows\n    granularityColumnsOffset: 0,\n    // if true, set the selection to the reverse of the target/clicked cell\n    // if false, set the selection to the reverse of top/left cell of the selection\n    granularityFollowsTarget: true,\n    onSelectionStart: () => {},\n    onInput: () => {},\n    onChange: () => {}\n  };\n\n  state = {\n    selectionStarted: false,\n    hoverStarted: false,\n    targetRow: null,\n    targetColumn: null,\n    startRow: null,\n    startColumn: null,\n    endRow: null,\n    endColumn: null,\n    addMode: null,\n    hoverStartRow: null,\n    hoverStartColumn: null,\n    hoverEndRow: null,\n    hoverEndColumn: null\n  };\n\n  componentDidMount = () => {\n    window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  render = () => {\n    return (\n      <table className=\"table-drag-select\">\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </table>\n    );\n  };\n\n  renderRows = () =>\n    React.Children.map(this.props.children, (tr, i) => {\n      return (\n        <tr key={i} {...tr.props}>\n          {React.Children.map(tr.props.children, (cell, j) =>\n            <Cell\n              key={j}\n              onTouchStart={this.handleTouchStartCell}\n              onTouchMove={this.handleTouchMoveCell}\n              onMouseEnter={this.onMouseEnter}\n              onMouseLeave={this.onMouseLeave}\n              selected={this.props.value[i][j]}\n              hovered={this.isCellBeingHovered(i, j)}\n              beingSelected={this.isCellBeingSelected(i, j)}\n              {...cell.props}\n            >\n              {cell.props.children}\n            </Cell>\n          )}\n        </tr>\n      );\n    });\n\n  handleTouchStartCell = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n      e.preventDefault();\n      const { row: targetRow, column: targetColumn } = eventToCellLocation(e);\n      const {\n        startRow,\n        endRow,\n        startColumn,\n        endColumn\n      } = cellLocationByGranularity(eventToCellLocation(e), this.props);\n      this.props.onSelectionStart({ startRow, startColumn });\n      this.setState({\n        selectionStarted: true,\n        targetRow,\n        targetColumn,\n        startRow,\n        startColumn,\n        endRow,\n        endColumn,\n        addMode: this.props.granularityFollowsTarget\n          ? !this.props.value[targetRow][targetColumn]\n          : !this.props.value[startRow][startColumn]\n      });\n    }\n  };\n\n  handleTouchMoveCell = e => {\n    if (this.state.selectionStarted) {\n      e.preventDefault();\n      const { endRow, endColumn } = cellLocationByGranularity(\n        eventToCellLocation(e),\n        this.props\n      );\n      const {\n        startRow: stateStartRow,\n        startColumn: stateStartColumn,\n        endRow: stateEndRow,\n        endColumn: stateEndColumn\n      } = this.state;\n\n      if (stateEndRow !== endRow || stateEndColumn !== endColumn) {\n        const nextRowCount =\n          stateStartRow === null && stateEndRow === null\n            ? 0\n            : Math.abs(endRow - stateStartRow) + 1;\n        const nextColumnCount =\n          stateStartColumn === null && stateEndColumn === null\n            ? 0\n            : Math.abs(endColumn - stateStartColumn) + 1;\n\n        if (nextRowCount <= this.props.maxRows) {\n          this.setState({ endRow });\n        }\n\n        if (nextColumnCount <= this.props.maxColumns) {\n          this.setState({ endColumn });\n        }\n      }\n    }\n  };\n\n  handleTouchEndWindow = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n      const value = clone(this.props.value);\n      const minRow = Math.min(this.state.startRow, this.state.endRow);\n      const maxRow = Math.max(this.state.startRow, this.state.endRow);\n      for (let row = minRow; row <= maxRow; row++) {\n        const minColumn = Math.min(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        const maxColumn = Math.max(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        for (let column = minColumn; column <= maxColumn; column++) {\n          value[row][column] = this.state.addMode;\n        }\n      }\n      this.setState({ selectionStarted: false });\n      this.props.onChange(value);\n    }\n  };\n\n  onMouseEnter = e => {\n    if (!this.state.selectionStarted) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      const {\n        startRow,\n        endRow,\n        startColumn,\n        endColumn\n      } = cellLocationByGranularity({ row, column }, this.props);\n      this.setState({\n        hoverStarted: true,\n        hoverStartRow: startRow,\n        hoverEndRow: endRow,\n        hoverStartColumn: startColumn,\n        hoverEndColumn: endColumn\n      });\n      this.props.onChange(clone(this.props.value));\n    }\n  };\n\n  onMouseLeave = e => {\n    this.setState({\n      hoverStarted: false,\n      hoverStartRow: -1,\n      hoverEndRow: -1,\n      hoverStartColumn: -1,\n      hoverEndColumn: -1\n    });\n    // this.setState({ hoverStarted})\n  };\n\n  isCellBeingSelected = (row, column) => {\n    const minRow = Math.min(this.state.startRow, this.state.endRow);\n    const maxRow = Math.max(this.state.startRow, this.state.endRow);\n    const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n    const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n\n    return (\n      this.state.selectionStarted &&\n      (row >= minRow &&\n        row <= maxRow &&\n        column >= minColumn &&\n        column <= maxColumn)\n    );\n  };\n\n  isCellBeingHovered = (row, column) => {\n    const minRow = Math.min(this.state.hoverStartRow, this.state.hoverEndRow);\n    const maxRow = Math.max(this.state.hoverStartRow, this.state.hoverEndRow);\n    const minColumn = Math.min(\n      this.state.hoverStartColumn,\n      this.state.hoverEndColumn\n    );\n    const maxColumn = Math.max(\n      this.state.hoverStartColumn,\n      this.state.hoverEndColumn\n    );\n\n    return (\n      this.state.hoverStarted &&\n      (row >= minRow &&\n        row <= maxRow &&\n        column >= minColumn &&\n        column <= maxColumn)\n    );\n  };\n}\n\nclass Cell extends React.Component {\n  // This optimization gave a 10% performance boost while drag-selecting\n  // cells\n  shouldComponentUpdate = nextProps =>\n    this.props.beingSelected !== nextProps.beingSelected ||\n    this.props.selected !== nextProps.selected ||\n    this.props.hovered !== nextProps.hovered;\n\n  componentDidMount = () => {\n    // We need to call addEventListener ourselves so that we can pass\n    // {passive: false}\n    this.td.addEventListener(\"touchstart\", this.handleTouchStart, {\n      passive: false\n    });\n    this.td.addEventListener(\"touchmove\", this.handleTouchMove, {\n      passive: false\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n    this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n  };\n\n  render = () => {\n    let {\n      className = \"\",\n      disabled,\n      beingSelected,\n      selected,\n      hovered,\n      onTouchStart,\n      onTouchMove,\n      ...props\n    } = this.props;\n    if (disabled) {\n      className += \" cell-disabled\";\n    } else {\n      className += \" cell-enabled\";\n      if (selected) {\n        className += \" cell-selected\";\n      }\n      if (beingSelected) {\n        className += \" cell-being-selected\";\n      }\n      if (hovered) {\n        className += \" cell-hovered\";\n      }\n    }\n    return (\n      <td\n        ref={td => (this.td = td)}\n        className={className}\n        onMouseDown={this.handleTouchStart}\n        onMouseMove={this.handleTouchMove}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        {...props}\n      >\n        {this.props.children || <span>&nbsp;</span>}\n      </td>\n    );\n  };\n\n  handleTouchStart = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchStart(e);\n    }\n  };\n\n  handleTouchMove = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchMove(e);\n    }\n  };\n\n  handleMouseEnter = e => {\n    if (!this.props.disabled) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  handleMouseLeave = e => {\n    if (!this.props.disabled) {\n      this.props.onMouseLeave(e);\n    }\n  };\n}\n\n// Takes a mouse or touch event and returns the corresponding row and cell.\n// Example:\n//\n// eventToCellLocation(event);\n// {row: 2, column: 3}\nconst eventToCellLocation = e => {\n  let target;\n  // For touchmove and touchend events, e.target and e.touches[n].target are\n  // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n  // to use e.target.\n  if (e.touches) {\n    const touch = e.touches[0];\n    target = document.elementFromPoint(touch.clientX, touch.clientY);\n  } else {\n    target = e.target;\n    while (target.tagName !== \"TD\") {\n      target = target.parentNode;\n    }\n  }\n  return {\n    row: target.parentNode.rowIndex,\n    column: target.cellIndex\n  };\n};\n\nconst numberByGranularity = (number, granularity, offset, max) => {\n  let start = Number(number);\n  let end = Number(number);\n  if (granularity > 1) {\n    start = Math.floor((number - offset) / granularity) * granularity + offset;\n    end = start + granularity - 1;\n    end = Math.min(end, max);\n  }\n  return { start, end };\n};\n\nconst cellLocationByGranularity = (\n  { row, column },\n  {\n    granularityRows = 1,\n    granularityColumns = 1,\n    granularityRowsOffset = 0,\n    granularityColumnsOffset = 0,\n    value = []\n  }\n) => {\n  const maxRow = value.length ? value.length - 1 : 0;\n  const maxColumn = value.length ? value[0].length - 1 : 0;\n  let { start: startRow, end: endRow } = numberByGranularity(\n    row,\n    granularityRows,\n    granularityRowsOffset,\n    maxRow\n  );\n  let { start: startColumn, end: endColumn } = numberByGranularity(\n    column,\n    granularityColumns,\n    granularityColumnsOffset,\n    maxColumn\n  );\n  return {\n    startRow: startRow,\n    endRow,\n    startColumn: startColumn,\n    endColumn\n  };\n};\n"]}